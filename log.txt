February 3rd, 2025
-Had a meeting for a class
-Discussed on further assignments for ITR1
-We decided to split up the tasks and each person will be responsible for one user story
-Joshua for log, Khalifa for alerts, Jiwon for catalog, Andy for budget, Peyton for log viewing
-Decided to complete a frame work as soon as possible because we wish to develop in deeper depth with it

February 9th, 2025
-Peyton
--Added the base of Transaction and TransactionControlle
--Simple ability to add and display transactions with TransactionController class

February 11th, 2025
-Joshua
--Added the basic logging feature on simple GUI
--Decided to add simple local MYSQL server hosting
--Time spent around 5 hours

-As a group
--Discuess our coding plans in details and shared concerns
--Helped each other when someone get stuck on something or search for an assistance
--Convinced with individual work, make sure everyone is on the right track
--Spend around 2 hours

February 13th, 2025
-Peyton
--Worked on own version of class for TransactionController with new method that allow filtering and sorting of transaction
--Modified those to allow test and added test cases for Transaction and TransactionController class in master branch
--Time spent around 3 hours
---Realized it is different from what we wanted so did not push into main branch as a result 

February 14th, 2025
-Jiwon
--Added a dropbox on Calendar UI insteads of description part to allow users for catalogize their income and expense
--Created a Filter UI to show user for filtered transactions based on their selected preferences
--Time spent around 3 hours
--Also worked on planning document for the modified version and the log text file for Iteration 1
--Time spent around 2.5 hours
--Also added a tag for the codes
--Time spent around 1.5 hours

-Andy
--Added the Transaction Log UI so it displays a table full of data from the SQL database
--Connected the UI so it retrieves the data from the SQL database server
--Typed up the Wiki for Iteration 1
--Time spent around 5 hours

-Khalifa
--Developed Email Notifier for budget alerts
--Added budget overuse alert functionality
--Created User Info Dialog UI for collecting user details
--Time spent 8 hours
--Set up the project's architecture
--Issue encountered:
---SMTP authentication failure
---UI layout adjustments for modal dialog
--Lesson learned:
---Implemented environment variables for credentials
---Improved UI usability and validatoion techniques


February 24th, 2025
- We had a dicussion of additional user stories to work on and splitted up the work for ITR2
- Progress bar UI for saving goal - Joshua
- Reading CSV files - Jiwon
- Database - Khalifa
- Unit test - Andy
- Visual graph representation of savings and log - Payton

March 1st, 2025
Joshua
- Setup GUI for the software
- Added icons to user category
- Added Calendar selection for date input
- Added basic Quiz sections
- Connected Recent transactions to SQL
- Time spent: 5 hours
- Issue encountered:
  - MySQL is currently hosted on local server
  - Local server is required for software to start 

March 3rd, 2025
Andy
- Started Unit Test cases for indiviual modules
- Started working on Integration tests for the fake databas
- Time spent was 1.5 hours

March 6th, 2025
- Khalifa
UI Enhancements:
Registration & Login Screens:
Added a “Register” button to the login screen and a corresponding registration screen that mirrors the login UI.
Implemented smooth fade-in and fade-out transitions between the screens to provide a polished user experience.
Custom Exit Button:
Added a custom exit ("X") button on both screens to allow users to close the application gracefully.

Database Integration & Functionality:
User Registration & Authentication:
Integrated database operations for registration and login using PostgreSQL.
Modified the registerUser method to use Statement.RETURN_GENERATED_KEYS so that the generated user ID can be captured and stored in the User model.
Updated the authenticateUser method to return the user’s ID (or -1 on failure), which allows the creation of a complete User model upon login.
Database Initialization:
Ensured that the database schema is set up by using a DatabaseInitializer that creates tables if they don’t exist.
Confirmed that existing data is preserved and that the initializer runs at application startup.

Transaction Model & Controller:
Updated the Transaction model to include constructors for both manual creation and database retrieval.
Modified the transactions controller to retrieve transactions from the database, returning them as a list ordered by date in descending order.
User Model Update:
Updated the User model to include an ID field and a full constructor so that user data retrieved from the database can be fully captured.


Jiwon
- Had an issue with database
  - Felt the need of having the shared database as if someone committed, then it changes the database implementation setting. If we had a sharing one, we would have less chance of crashing database
  - Took 4 hours to figure out why mySQL did not work properly and found that it was because my laptop did not have a port. Solved the issue by initializing the port. 
  - Started to work on my part, which was about reading CSV files. Time spent about an hour.


Peyton
- Created new branch Peyton from main branch
- Added analyticsController class to handle the analytics data
- Added AnalyticsUI class to display the charts for the analytics
- For charts bar chart of income vs expenses, pie chart of income vs expenses and expenses by category, line chart of savings over time
- Changed savings over time and income vs expenses methods in AnalyticsUi to display time in chronological order 
- Ui opens in a different window still have to add it to the analytics tab in app
- Took around 4 hours to implement 


Andy
- Continued creating Integration tests for the database
- Worked on implementing the transaction log from Iteration 1 to the new UI
- Continued creating unit tests for the different modules and components that we already had 
- Worked on fixing bugs that prevented the program from starting up
- Time spent was around 3 hours


March 7th, 2025

- Khalifa
User Interface Enhancements:
Added a registration screen that mirrors the login UI.
Integrated smooth fade-in and fade-out transitions between the login and registration pages.
Added custom exit buttons to both screens to provide a consistent look and allow users to exit the application.
Implemented tooltips and enhanced error messages on login and registration pages to guide the user on expected input formats (e.g., email format, password length).

Database Integration and Improvements:
Created a DatabaseInitializer to set up the schema (tables for users and transactions) at application startup.
Refactored DatabaseManager to return a new connection for each operation, preventing the "connection has been closed" error.
Modified the registration method (registerUser) to return the generated user ID by using Statement.RETURN_GENERATED_KEYS.
Updated the login method (authenticateUser) to return the user’s ID (or -1 if authentication fails) for use in building a complete User model.

Controller and Model Updates:
Updated the Transaction model with a constructor to handle database retrieval (including conversion of SQL timestamps to LocalDate), and ensured that each transaction object carries its generated ID.
Enhanced the Transaction controller to:
Retrieve transactions in descending order by date.
Delete a specific transaction using its unique ID.
Updated the User model to include an ID field and a full constructor for database integration.
Maven Dependency Update:
Added the PostgreSQL JDBC dependency (org.postgresql:postgresql:42.7.5) to the pom.xml file to support PostgreSQL database connectivity.


Peyton
- changed AnalyticsUI to the display the charts on the app itself and formatted it correctly to fit the 4 charts
- Pushed the changed from my branch to main by merge
- Took around 2 hours to make the changes


Joshua
- Added Goals tab to the web 
  - Currently not fully integrated to the dashboard, but set up with SQL.
- Changed Calendar UI to make it fit the theme and bug fixes
- Added Switch account feature for users to log out and swap between accounts
- Added UMl diagram and architecture diagram
- Work time around 3 hours.


Jiwon
- Added analytics tab; added AnalyticsUI, Analytics, AnalyticsController
- Made a change in pom.xml as dependency related to CSV was necessary
- Analytics will be displayed once you import a CSV file
- Related tables will be displayed 
- Not completely finished the part for interaction between the dashboard tab and analytics tab, if the user adds its transaction, the data will be reflected in the analytics tab
- Time spent about 6 hours

- After a long discussion, we wanted to focus on displaying the charts for now so we decided to add importing CSV file function later
- Started to work on planning document and finalizing the log
- Took me about 1.5 hours


Andy
- Added and fixed the transaction log to fit the new UI
- Added more test cases to new features added over night
- Wrote the wiki for Iteration 2
- Time took around 3 hours
